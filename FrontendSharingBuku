// This is the frontend code to display and interact with the book-sharing platform.

// Importing React and necessary dependencies
import React, { useState, useEffect } from 'react';
import axios from 'axios';

// The main App component
function App() {
  // State to store data for users and books
  const [users, setUsers] = useState([]);
  const [books, setBooks] = useState([]);
  const [newUser, setNewUser] = useState({ name: '', location: '', email: '' });
  const [newBook, setNewBook] = useState({ title: '', author: '', owner: '', available: true });

  // Function to fetch books from the server
  useEffect(() => {
    axios.get('http://localhost:5000/books')
      .then(response => setBooks(response.data))
      .catch(error => console.error('Error fetching books:', error));
  }, []);

  // Function to handle user form submission
  const handleUserSubmit = (e) => {
    e.preventDefault();
    axios.post('http://localhost:5000/users', newUser)
      .then(response => {
        setUsers([...users, response.data]);
        setNewUser({ name: '', location: '', email: '' });
      })
      .catch(error => console.error('Error adding user:', error));
  };

  // Function to handle book form submission
  const handleBookSubmit = (e) => {
    e.preventDefault();
    axios.post('http://localhost:5000/books', newBook)
      .then(response => {
        setBooks([...books, response.data]);
        setNewBook({ title: '', author: '', owner: '', available: true });
      })
      .catch(error => console.error('Error adding book:', error));
  };

  return (
    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>
      <h1>Book Sharing Platform</h1>

      {/* User Registration Form */}
      <h2>Add a New User</h2>
      <form onSubmit={handleUserSubmit}>
        <input type="text" placeholder="Name" value={newUser.name} onChange={(e) => setNewUser({ ...newUser, name: e.target.value })} required />
        <input type="text" placeholder="Location" value={newUser.location} onChange={(e) => setNewUser({ ...newUser, location: e.target.value })} required />
        <input type="email" placeholder="Email" value={newUser.email} onChange={(e) => setNewUser({ ...newUser, email: e.target.value })} required />
        <button type="submit">Add User</button>
      </form>

      {/* Book Registration Form */}
      <h2>Add a New Book</h2>
      <form onSubmit={handleBookSubmit}>
        <input type="text" placeholder="Title" value={newBook.title} onChange={(e) => setNewBook({ ...newBook, title: e.target.value })} required />
        <input type="text" placeholder="Author" value={newBook.author} onChange={(e) => setNewBook({ ...newBook, author: e.target.value })} required />
        <input type="text" placeholder="Owner ID" value={newBook.owner} onChange={(e) => setNewBook({ ...newBook, owner: e.target.value })} required />
        <button type="submit">Add Book</button>
      </form>

      {/* List of Books */}
      <h2>Available Books</h2>
      <ul>
        {books.map(book => (
          <li key={book._id}>{book.title} by {book.author} (Available: {book.available ? 'Yes' : 'No'})</li>
        ))}
      </ul>
    </div>
  );
}

export default App;
